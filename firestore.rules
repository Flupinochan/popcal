rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 以降にCollection、Documentのパスに対するセキュリティルールを記載
    // /users/{認証したユーザID}/rotations/{各RotationGroupIdのDocument}/
    // ※ワイルドカードで再帰的に許可することも可能
    match /users/{userId}/rotationGroups/{rotationGroupId} {
      allow read: if isAuthenticated(userId);
      allow create, update: if isAuthenticated(userId) && isValidData(request.resource.data);
      allow delete: if isAuthenticated(userId);
    }

    // 認証チェック
    function isAuthenticated(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // データ検証 (作成/更新時)
    function isValidData(data) {
      return hasValidSchema(data) && hasValidOwner(data);
    }

    // スキーマチェック (以下のフィールドをすべて含んだデータの場合のみOK)
    function hasValidSchema(data) {
      let requiredFields = ['ownerUserId', 'rotationName', 'rotationMembers', 
                           'rotationDays', 'notificationTime', 'currentRotationIndex',
                           'lastScheduledDate', 'rotationStartDate', 'updatedAt'];
      return data.keys().hasOnly(requiredFields);
    }

    // 所有者チェック
    function hasValidOwner(data) {
      return data.ownerUserId == request.auth.uid;
    }
  }
}